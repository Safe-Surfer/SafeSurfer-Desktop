image: opensuse/leap

stages:
  - build
  - deploy

pages:
  stage: deploy
  script:
    - mkdir .public
    - cp -r builtBinaries/* .public
    - mv .public public
  dependencies:
    - build
  artifacts:
    paths:
      - public/*
  only:
    - tags
    - master

build:
  stage: build
  before_script:
    # install deps for build enviroment
    - zypper in -y git nodejs npm8 tar bzip2 wget fuse AppStream wine unzip zip mono-devel curl libfuse2-32bit binutils
    - zypper in -y -t pattern devel_basis
  script:
    # make built directory
    - mkdir builtBinaries
    # prep dependencies
    - npm i
    # build AppImage
    - make prep-appimage build-appimage || true
    - cd tools
    - ./appimagetool-x86_64.AppImage --appimage-extract || true
    - ./squashfs-root/AppRun -n -s ../nz.co.safesurfer.SafeSurfer-Desktop.AppDir
    - mv Safe_Surfer-x86_64.AppImage ../builtBinaries/.
    - cd ..
    # clean build
    - make clean
    # build macOS & zip it
    - node_modules/.bin/electron-builder --mac zip
    - mv dist/SafeSurfer-Desktop-*-mac.zip builtBinaries/.
    # clean build
    - make clean
    # build windows (64-bit)
    - make build-windows
    - mv dist/SafeSurfer-Desktop\ *.exe builtBinaries/.
    # clean build
    - make clean
    # hash all binaries
    - cd builtBinaries && sha256sum * > sha256ums.txt && cd ..
  artifacts:
    expire_in: 5 days
    paths:
      - builtBinaries/*
  only:
    - tags
    - master