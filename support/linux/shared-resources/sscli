#!/bin/bash

# SafeSurfer-Desktop - sscli

#
# Copyright (C) 2018 Caleb Woodbine <info@safesurfer.co.nz>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
#

arg="$1"
resolvconf="/etc/resolv.conf"
primaryDNS=104.197.28.121
secondaryDNS=104.155.237.225

function sudoUserCheck() {
# check if user is root
if [ ! "$(whoami)" = "root" ]
then
	echo "ERROR: You must be root to use some this program."
	exit 1
fi
return 0
}

function printHelpMenu() {
# print the help menu
cat << EOF
The Safe Surfer command line utility

Usage: sscli [OPT]

OPTS:
help     print this menu
enable   enable the DNS
disable  disable the DNS
service  check and enable as service
status	 get the status of the service
launch   launch the desktop app
EOF
}

function enableBackgroundService() {
# a process which checks if services isn't enabled, then enables it.
while true
do
	if ! checkServiceState
	then
		echo "SERVICE: Not enabled... setting up."
		setDNSservers
	else
		echo "SERVICE: User is already protected."
	fi
sleep 10m
done
}

function checkServiceState() {
# return if the service is enabled
if curl -s check.safesurfer.co.nz | grep -q '<meta name="ss_status" content="protected">'
then
	return 0
else
	return 1
fi

}

function setDNSservers() {
# set DNS settings
mv "$resolvconf"{,.before_safesurfer}
echo -e "nameserver $primaryDNS\\nnameserver $secondaryDNS" > "$resolvconf"

if checkServiceState
then
	echo "DNS settings installed successfully."
	chattr +i /etc/resolv.conf
	return 0
else
	echo "ERROR: DNS settings failed to install; Reverting changes."
	mv "$resolvconf"{.before_safesurfer,}
	return 1
fi

which systemd-resolve && systemd-resolve --flush-caches
which nmcli && systemctl is-active --quiet NetworkManager && service NetworkManager reload && service NetworkManager restart
which nscd && systemctl is-active --quiet nscd && service nscd reload && service nscd restart

}

function restoreDNSservers() {
# restore DNS settings
chattr -i /etc/resolv.conf
[ ! -f "$resolvconf.before_safesurfer" ] && echo "ERROR: Could not find DNS backup file."
mv "$resolvconf"{.before_safesurfer,}
if ! checkServiceState
then
	echo "DNS settings removed successfully."
	return 0
else
	echo "ERROR: DNS settings failed to remove."
	return 1
fi

which systemd-resolve && systemd-resolve --flush-caches
which nmcli && systemctl is-active --quiet NetworkManager && service NetworkManager reload && service NetworkManager restart
which nscd && systemctl is-active --quiet nscd && service nscd reload && service nscd restart

}

cat << EOF
---------------
- sscli       -
- by          -
- Safe Surfer -
---------------"
EOF
case "$arg" in
	enable|-e|--enable)
		shift
		sudoUserCheck
		if [ ! "$1" = "-f" ] || [ ! "$1" = "force" ]
		then
			checkServiceState && echo "SERVICE: Already enabled." || setDNSservers
		else
			setDNSservers
		fi
		;;
	disable|-d|--disable)
		shift
		sudoUserCheck
		if [ ! "$1" = "-f" ] || [ ! "$1" = "force" ]
		then
			checkServiceState && restoreDNSservers || echo "SERVICE: Already disabled."
		else
			restoreDNSservers
		fi
		;;
	service|-s|--service)
		sudoUserCheck
		enableBackgroundService
		;;
	check|status|-c|--check|-s|--status)
		checkServiceState && echo "SERVICE: Enabled." || echo "SERIVCE: Disabled."
		;;
	launch|-l|--launch)
		[[ "$(whoami)" = "root" ]] && echo "ERROR: You can't launch the desktop app as root." && exit 1
		/opt/SafeSurfer-Desktop/SafeSurfer-Desktop
		;;
	*)
		printHelpMenu
		;;
esac
